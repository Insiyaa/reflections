What happens when you initialize a repository? Why do you need to do it?
When a repository is initialized, a .git hidden file is created. It is needed
to get git working on that directory.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
umm it is from where we can commit some files together. Not sure what it
offers though.

How can you use the staging area to make sure you have one commit per logical
change?
Adding individual files and not adding everything together so that I could commit
stuffs which go well together.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
When creating versions having different language, this could be helpful in
organizing. I could easily take that version ahead without disrupting the
original version.

How do the diagrams help you visualize the branch structure?
Beautifully. I am able to understand reachability through them.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
It takes properties from both of its parent and the original source from where it diverged.


What are the pros and cons of Git's automatic merging vs. always doing merges
manually?